/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.xmlportletfactory.tnsoft.qrperson.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.xmlportletfactory.tnsoft.qrperson.model.person;
import org.xmlportletfactory.tnsoft.qrperson.model.personModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the person service. Represents a row in the &quot;qrperson_person&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.xmlportletfactory.tnsoft.qrperson.model.personModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link personImpl}.
 * </p>
 *
 * @author Jack A. Rider
 * @see personImpl
 * @see org.xmlportletfactory.tnsoft.qrperson.model.person
 * @see org.xmlportletfactory.tnsoft.qrperson.model.personModel
 * @generated
 */
public class personModelImpl extends BaseModelImpl<person>
	implements personModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a person model instance should use the {@link org.xmlportletfactory.tnsoft.qrperson.model.person} interface instead.
	 */
	public static final String TABLE_NAME = "qrperson_person";
	public static final Object[][] TABLE_COLUMNS = {
			{ "kundeId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "Firstname", Types.VARCHAR },
			{ "Middlename", Types.VARCHAR },
			{ "Lastname", Types.VARCHAR },
			{ "kundeDescription", Types.VARCHAR },
			{ "userDocument", Types.BIGINT },
			{ "City", Types.VARCHAR },
			{ "userEmail", Types.VARCHAR },
			{ "folderDLId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table qrperson_person (kundeId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,Firstname VARCHAR(100) null,Middlename VARCHAR(100) null,Lastname VARCHAR(100) null,kundeDescription VARCHAR(100) null,userDocument LONG,City VARCHAR(30) null,userEmail VARCHAR(50) null,folderDLId LONG)";
	public static final String TABLE_SQL_DROP = "drop table qrperson_person";
	public static final String ORDER_BY_JPQL = " ORDER BY person.kundeId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY qrperson_person.kundeId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.xmlportletfactory.tnsoft.qrperson.model.person"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.xmlportletfactory.tnsoft.qrperson.model.person"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.xmlportletfactory.tnsoft.qrperson.model.person"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long USERID_COLUMN_BITMASK = 4L;
	public static long KUNDEID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.xmlportletfactory.tnsoft.qrperson.model.person"));

	public personModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _kundeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setKundeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _kundeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return person.class;
	}

	@Override
	public String getModelClassName() {
		return person.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("kundeId", getKundeId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("Firstname", getFirstname());
		attributes.put("Middlename", getMiddlename());
		attributes.put("Lastname", getLastname());
		attributes.put("kundeDescription", getKundeDescription());
		attributes.put("userDocument", getUserDocument());
		attributes.put("City", getCity());
		attributes.put("userEmail", getUserEmail());
		attributes.put("folderDLId", getFolderDLId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long kundeId = (Long)attributes.get("kundeId");

		if (kundeId != null) {
			setKundeId(kundeId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String Firstname = (String)attributes.get("Firstname");

		if (Firstname != null) {
			setFirstname(Firstname);
		}

		String Middlename = (String)attributes.get("Middlename");

		if (Middlename != null) {
			setMiddlename(Middlename);
		}

		String Lastname = (String)attributes.get("Lastname");

		if (Lastname != null) {
			setLastname(Lastname);
		}

		String kundeDescription = (String)attributes.get("kundeDescription");

		if (kundeDescription != null) {
			setKundeDescription(kundeDescription);
		}

		Long userDocument = (Long)attributes.get("userDocument");

		if (userDocument != null) {
			setUserDocument(userDocument);
		}

		String City = (String)attributes.get("City");

		if (City != null) {
			setCity(City);
		}

		String userEmail = (String)attributes.get("userEmail");

		if (userEmail != null) {
			setUserEmail(userEmail);
		}

		Long folderDLId = (Long)attributes.get("folderDLId");

		if (folderDLId != null) {
			setFolderDLId(folderDLId);
		}
	}

	@Override
	public long getKundeId() {
		return _kundeId;
	}

	@Override
	public void setKundeId(long kundeId) {
		_kundeId = kundeId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getFirstname() {
		if (_Firstname == null) {
			return StringPool.BLANK;
		}
		else {
			return _Firstname;
		}
	}

	@Override
	public void setFirstname(String Firstname) {
		_Firstname = Firstname;
	}

	@Override
	public String getMiddlename() {
		if (_Middlename == null) {
			return StringPool.BLANK;
		}
		else {
			return _Middlename;
		}
	}

	@Override
	public void setMiddlename(String Middlename) {
		_Middlename = Middlename;
	}

	@Override
	public String getLastname() {
		if (_Lastname == null) {
			return StringPool.BLANK;
		}
		else {
			return _Lastname;
		}
	}

	@Override
	public void setLastname(String Lastname) {
		_Lastname = Lastname;
	}

	@Override
	public String getKundeDescription() {
		if (_kundeDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _kundeDescription;
		}
	}

	@Override
	public void setKundeDescription(String kundeDescription) {
		_kundeDescription = kundeDescription;
	}

	@Override
	public long getUserDocument() {
		return _userDocument;
	}

	@Override
	public void setUserDocument(long userDocument) {
		_userDocument = userDocument;
	}

	@Override
	public String getCity() {
		if (_City == null) {
			return StringPool.BLANK;
		}
		else {
			return _City;
		}
	}

	@Override
	public void setCity(String City) {
		_City = City;
	}

	@Override
	public String getUserEmail() {
		if (_userEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _userEmail;
		}
	}

	@Override
	public void setUserEmail(String userEmail) {
		_userEmail = userEmail;
	}

	@Override
	public long getFolderDLId() {
		return _folderDLId;
	}

	@Override
	public void setFolderDLId(long folderDLId) {
		_folderDLId = folderDLId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			person.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public person toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (person)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		personImpl personImpl = new personImpl();

		personImpl.setKundeId(getKundeId());
		personImpl.setCompanyId(getCompanyId());
		personImpl.setGroupId(getGroupId());
		personImpl.setUserId(getUserId());
		personImpl.setUserName(getUserName());
		personImpl.setCreateDate(getCreateDate());
		personImpl.setModifiedDate(getModifiedDate());
		personImpl.setFirstname(getFirstname());
		personImpl.setMiddlename(getMiddlename());
		personImpl.setLastname(getLastname());
		personImpl.setKundeDescription(getKundeDescription());
		personImpl.setUserDocument(getUserDocument());
		personImpl.setCity(getCity());
		personImpl.setUserEmail(getUserEmail());
		personImpl.setFolderDLId(getFolderDLId());

		personImpl.resetOriginalValues();

		return personImpl;
	}

	@Override
	public int compareTo(person person) {
		long primaryKey = person.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof person)) {
			return false;
		}

		person person = (person)obj;

		long primaryKey = person.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		personModelImpl personModelImpl = this;

		personModelImpl._originalCompanyId = personModelImpl._companyId;

		personModelImpl._setOriginalCompanyId = false;

		personModelImpl._originalGroupId = personModelImpl._groupId;

		personModelImpl._setOriginalGroupId = false;

		personModelImpl._originalUserId = personModelImpl._userId;

		personModelImpl._setOriginalUserId = false;

		personModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<person> toCacheModel() {
		personCacheModel personCacheModel = new personCacheModel();

		personCacheModel.kundeId = getKundeId();

		personCacheModel.companyId = getCompanyId();

		personCacheModel.groupId = getGroupId();

		personCacheModel.userId = getUserId();

		personCacheModel.userName = getUserName();

		String userName = personCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			personCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			personCacheModel.createDate = createDate.getTime();
		}
		else {
			personCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			personCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			personCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		personCacheModel.Firstname = getFirstname();

		String Firstname = personCacheModel.Firstname;

		if ((Firstname != null) && (Firstname.length() == 0)) {
			personCacheModel.Firstname = null;
		}

		personCacheModel.Middlename = getMiddlename();

		String Middlename = personCacheModel.Middlename;

		if ((Middlename != null) && (Middlename.length() == 0)) {
			personCacheModel.Middlename = null;
		}

		personCacheModel.Lastname = getLastname();

		String Lastname = personCacheModel.Lastname;

		if ((Lastname != null) && (Lastname.length() == 0)) {
			personCacheModel.Lastname = null;
		}

		personCacheModel.kundeDescription = getKundeDescription();

		String kundeDescription = personCacheModel.kundeDescription;

		if ((kundeDescription != null) && (kundeDescription.length() == 0)) {
			personCacheModel.kundeDescription = null;
		}

		personCacheModel.userDocument = getUserDocument();

		personCacheModel.City = getCity();

		String City = personCacheModel.City;

		if ((City != null) && (City.length() == 0)) {
			personCacheModel.City = null;
		}

		personCacheModel.userEmail = getUserEmail();

		String userEmail = personCacheModel.userEmail;

		if ((userEmail != null) && (userEmail.length() == 0)) {
			personCacheModel.userEmail = null;
		}

		personCacheModel.folderDLId = getFolderDLId();

		return personCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{kundeId=");
		sb.append(getKundeId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", Firstname=");
		sb.append(getFirstname());
		sb.append(", Middlename=");
		sb.append(getMiddlename());
		sb.append(", Lastname=");
		sb.append(getLastname());
		sb.append(", kundeDescription=");
		sb.append(getKundeDescription());
		sb.append(", userDocument=");
		sb.append(getUserDocument());
		sb.append(", City=");
		sb.append(getCity());
		sb.append(", userEmail=");
		sb.append(getUserEmail());
		sb.append(", folderDLId=");
		sb.append(getFolderDLId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("org.xmlportletfactory.tnsoft.qrperson.model.person");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>kundeId</column-name><column-value><![CDATA[");
		sb.append(getKundeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Firstname</column-name><column-value><![CDATA[");
		sb.append(getFirstname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Middlename</column-name><column-value><![CDATA[");
		sb.append(getMiddlename());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Lastname</column-name><column-value><![CDATA[");
		sb.append(getLastname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>kundeDescription</column-name><column-value><![CDATA[");
		sb.append(getKundeDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userDocument</column-name><column-value><![CDATA[");
		sb.append(getUserDocument());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>City</column-name><column-value><![CDATA[");
		sb.append(getCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userEmail</column-name><column-value><![CDATA[");
		sb.append(getUserEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>folderDLId</column-name><column-value><![CDATA[");
		sb.append(getFolderDLId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = person.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { person.class };
	private long _kundeId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _Firstname;
	private String _Middlename;
	private String _Lastname;
	private String _kundeDescription;
	private long _userDocument;
	private String _City;
	private String _userEmail;
	private long _folderDLId;
	private long _columnBitmask;
	private person _escapedModel;
}