/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.xmlportletfactory.example01.order.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.xmlportletfactory.example01.order.model.kunde;
import org.xmlportletfactory.example01.order.model.kundeModel;
import org.xmlportletfactory.example01.order.model.kundeSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the kunde service. Represents a row in the &quot;order_kunde&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.xmlportletfactory.example01.order.model.kundeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link kundeImpl}.
 * </p>
 *
 * @author Jack A. Rider
 * @see kundeImpl
 * @see org.xmlportletfactory.example01.order.model.kunde
 * @see org.xmlportletfactory.example01.order.model.kundeModel
 * @generated
 */
@JSON(strict = true)
public class kundeModelImpl extends BaseModelImpl<kunde> implements kundeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a kunde model instance should use the {@link org.xmlportletfactory.example01.order.model.kunde} interface instead.
	 */
	public static final String TABLE_NAME = "order_kunde";
	public static final Object[][] TABLE_COLUMNS = {
			{ "kundeId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "kundeDescription", Types.VARCHAR },
			{ "userKunde", Types.VARCHAR },
			{ "userDocument", Types.BIGINT },
			{ "userCity", Types.VARCHAR },
			{ "userEmail", Types.VARCHAR },
			{ "folderDLId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table order_kunde (kundeId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,kundeDescription VARCHAR(100) null,userKunde VARCHAR(30) null,userDocument LONG,userCity VARCHAR(30) null,userEmail VARCHAR(50) null,folderDLId LONG)";
	public static final String TABLE_SQL_DROP = "drop table order_kunde";
	public static final String ORDER_BY_JPQL = " ORDER BY kunde.kundeId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY order_kunde.kundeId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.xmlportletfactory.example01.order.model.kunde"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.xmlportletfactory.example01.order.model.kunde"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.xmlportletfactory.example01.order.model.kunde"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long USERID_COLUMN_BITMASK = 4L;
	public static long KUNDEID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static kunde toModel(kundeSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		kunde model = new kundeImpl();

		model.setKundeId(soapModel.getKundeId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setKundeDescription(soapModel.getKundeDescription());
		model.setUserKunde(soapModel.getUserKunde());
		model.setUserDocument(soapModel.getUserDocument());
		model.setUserCity(soapModel.getUserCity());
		model.setUserEmail(soapModel.getUserEmail());
		model.setFolderDLId(soapModel.getFolderDLId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<kunde> toModels(kundeSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<kunde> models = new ArrayList<kunde>(soapModels.length);

		for (kundeSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.xmlportletfactory.example01.order.model.kunde"));

	public kundeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _kundeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setKundeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _kundeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return kunde.class;
	}

	@Override
	public String getModelClassName() {
		return kunde.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("kundeId", getKundeId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("kundeDescription", getKundeDescription());
		attributes.put("userKunde", getUserKunde());
		attributes.put("userDocument", getUserDocument());
		attributes.put("userCity", getUserCity());
		attributes.put("userEmail", getUserEmail());
		attributes.put("folderDLId", getFolderDLId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long kundeId = (Long)attributes.get("kundeId");

		if (kundeId != null) {
			setKundeId(kundeId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String kundeDescription = (String)attributes.get("kundeDescription");

		if (kundeDescription != null) {
			setKundeDescription(kundeDescription);
		}

		String userKunde = (String)attributes.get("userKunde");

		if (userKunde != null) {
			setUserKunde(userKunde);
		}

		Long userDocument = (Long)attributes.get("userDocument");

		if (userDocument != null) {
			setUserDocument(userDocument);
		}

		String userCity = (String)attributes.get("userCity");

		if (userCity != null) {
			setUserCity(userCity);
		}

		String userEmail = (String)attributes.get("userEmail");

		if (userEmail != null) {
			setUserEmail(userEmail);
		}

		Long folderDLId = (Long)attributes.get("folderDLId");

		if (folderDLId != null) {
			setFolderDLId(folderDLId);
		}
	}

	@JSON
	@Override
	public long getKundeId() {
		return _kundeId;
	}

	@Override
	public void setKundeId(long kundeId) {
		_kundeId = kundeId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getKundeDescription() {
		if (_kundeDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _kundeDescription;
		}
	}

	@Override
	public void setKundeDescription(String kundeDescription) {
		_kundeDescription = kundeDescription;
	}

	@JSON
	@Override
	public String getUserKunde() {
		if (_userKunde == null) {
			return StringPool.BLANK;
		}
		else {
			return _userKunde;
		}
	}

	@Override
	public void setUserKunde(String userKunde) {
		_userKunde = userKunde;
	}

	@JSON
	@Override
	public long getUserDocument() {
		return _userDocument;
	}

	@Override
	public void setUserDocument(long userDocument) {
		_userDocument = userDocument;
	}

	@JSON
	@Override
	public String getUserCity() {
		if (_userCity == null) {
			return StringPool.BLANK;
		}
		else {
			return _userCity;
		}
	}

	@Override
	public void setUserCity(String userCity) {
		_userCity = userCity;
	}

	@JSON
	@Override
	public String getUserEmail() {
		if (_userEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _userEmail;
		}
	}

	@Override
	public void setUserEmail(String userEmail) {
		_userEmail = userEmail;
	}

	@JSON
	@Override
	public long getFolderDLId() {
		return _folderDLId;
	}

	@Override
	public void setFolderDLId(long folderDLId) {
		_folderDLId = folderDLId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			kunde.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public kunde toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (kunde)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		kundeImpl kundeImpl = new kundeImpl();

		kundeImpl.setKundeId(getKundeId());
		kundeImpl.setCompanyId(getCompanyId());
		kundeImpl.setGroupId(getGroupId());
		kundeImpl.setUserId(getUserId());
		kundeImpl.setUserName(getUserName());
		kundeImpl.setCreateDate(getCreateDate());
		kundeImpl.setModifiedDate(getModifiedDate());
		kundeImpl.setKundeDescription(getKundeDescription());
		kundeImpl.setUserKunde(getUserKunde());
		kundeImpl.setUserDocument(getUserDocument());
		kundeImpl.setUserCity(getUserCity());
		kundeImpl.setUserEmail(getUserEmail());
		kundeImpl.setFolderDLId(getFolderDLId());

		kundeImpl.resetOriginalValues();

		return kundeImpl;
	}

	@Override
	public int compareTo(kunde kunde) {
		long primaryKey = kunde.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof kunde)) {
			return false;
		}

		kunde kunde = (kunde)obj;

		long primaryKey = kunde.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		kundeModelImpl kundeModelImpl = this;

		kundeModelImpl._originalCompanyId = kundeModelImpl._companyId;

		kundeModelImpl._setOriginalCompanyId = false;

		kundeModelImpl._originalGroupId = kundeModelImpl._groupId;

		kundeModelImpl._setOriginalGroupId = false;

		kundeModelImpl._originalUserId = kundeModelImpl._userId;

		kundeModelImpl._setOriginalUserId = false;

		kundeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<kunde> toCacheModel() {
		kundeCacheModel kundeCacheModel = new kundeCacheModel();

		kundeCacheModel.kundeId = getKundeId();

		kundeCacheModel.companyId = getCompanyId();

		kundeCacheModel.groupId = getGroupId();

		kundeCacheModel.userId = getUserId();

		kundeCacheModel.userName = getUserName();

		String userName = kundeCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			kundeCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			kundeCacheModel.createDate = createDate.getTime();
		}
		else {
			kundeCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			kundeCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			kundeCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		kundeCacheModel.kundeDescription = getKundeDescription();

		String kundeDescription = kundeCacheModel.kundeDescription;

		if ((kundeDescription != null) && (kundeDescription.length() == 0)) {
			kundeCacheModel.kundeDescription = null;
		}

		kundeCacheModel.userKunde = getUserKunde();

		String userKunde = kundeCacheModel.userKunde;

		if ((userKunde != null) && (userKunde.length() == 0)) {
			kundeCacheModel.userKunde = null;
		}

		kundeCacheModel.userDocument = getUserDocument();

		kundeCacheModel.userCity = getUserCity();

		String userCity = kundeCacheModel.userCity;

		if ((userCity != null) && (userCity.length() == 0)) {
			kundeCacheModel.userCity = null;
		}

		kundeCacheModel.userEmail = getUserEmail();

		String userEmail = kundeCacheModel.userEmail;

		if ((userEmail != null) && (userEmail.length() == 0)) {
			kundeCacheModel.userEmail = null;
		}

		kundeCacheModel.folderDLId = getFolderDLId();

		return kundeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{kundeId=");
		sb.append(getKundeId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", kundeDescription=");
		sb.append(getKundeDescription());
		sb.append(", userKunde=");
		sb.append(getUserKunde());
		sb.append(", userDocument=");
		sb.append(getUserDocument());
		sb.append(", userCity=");
		sb.append(getUserCity());
		sb.append(", userEmail=");
		sb.append(getUserEmail());
		sb.append(", folderDLId=");
		sb.append(getFolderDLId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("org.xmlportletfactory.example01.order.model.kunde");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>kundeId</column-name><column-value><![CDATA[");
		sb.append(getKundeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>kundeDescription</column-name><column-value><![CDATA[");
		sb.append(getKundeDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userKunde</column-name><column-value><![CDATA[");
		sb.append(getUserKunde());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userDocument</column-name><column-value><![CDATA[");
		sb.append(getUserDocument());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userCity</column-name><column-value><![CDATA[");
		sb.append(getUserCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userEmail</column-name><column-value><![CDATA[");
		sb.append(getUserEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>folderDLId</column-name><column-value><![CDATA[");
		sb.append(getFolderDLId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = kunde.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { kunde.class };
	private long _kundeId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _kundeDescription;
	private String _userKunde;
	private long _userDocument;
	private String _userCity;
	private String _userEmail;
	private long _folderDLId;
	private long _columnBitmask;
	private kunde _escapedModel;
}